{"version":3,"file":"static/js/201.c4ffad37.chunk.js","mappings":"iNAIO,SAASA,EAAWC,GAS1B,OARA,SAAiCC,GAChC,IAAIC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MAEb,OAAO,SAACP,GAAS,kBAAKC,GAAK,IAAEO,OAAQ,CAACN,SAAAA,EAAUE,SAAAA,EAAUE,OAAAA,KAC3D,CAGD,CAEA,IAAIG,EAA0B,SAACC,GAC9B,MAAO,CACNC,OAAQD,EAAME,KAAKD,OAErB,EAEO,SAASE,EAAiBb,GAShC,OAAOc,EAAAA,EAAAA,IAAQL,EAARK,EARP,SAAmCb,GAClC,OAAKA,EAAMU,QAIJ,SAACX,GAAS,UAAKC,KAHd,SAAC,KAAQ,CAACc,GAAI,UAIvB,GAGD,C,gFC/BA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAA6K,0BAA7K,EAAiN,yB,mBCUjN,EARe,SAACd,GACf,OACE,gBAAKe,UAAWC,EAAW,IAAMA,EAAS,UACzC,SAAC,KAAO,CAACF,GAAI,YAAcd,EAAMiB,GAAG,SAAEjB,EAAMkB,QAGhD,ECCA,EARgB,SAAClB,GAChB,OACE,gBAAKe,UAAWC,EAAU,SACxBhB,EAAMmB,SAGX,E,uCC2CA,EA3CgB,SAACnB,GAEhB,IAAIoB,EAAqBpB,EAAMqB,WAAWC,KAAI,SAACC,GAAI,OACjD,SAAC,EAAM,CAACL,KAAMK,EAAKL,KAAMD,GAAIM,EAAKN,IAAK,IAGrCO,EAAsBxB,EAAMyB,YAAYH,KAAI,SAACC,GAAI,OACnD,SAAC,EAAO,CAACJ,QAASI,EAAKJ,SAAU,IAqB/BO,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,cAAjBD,EAhBL,SAAC3B,GACrB,OACE,kBAAM6B,SAAU7B,EAAM8B,aAAa,WAClC,0BACC,SAACC,EAAA,EAAK,CAACC,UAAWC,EAAAA,GACdf,KAAM,aACNgB,YAAY,oBACZC,SAAU,CAACC,EAAAA,GAAUC,EAAAA,EAAAA,GAAc,UAExC,0BACC,iDAIL,IAIA,OACE,iBAAKtB,UAAWC,EAAU,WACzB,gBAAKD,UAAWC,EAAe,SAC7BI,KAEF,iBAAKL,UAAWC,EAAW,WAC1B,yBAAMQ,KACN,SAACE,EAAmB,CAACG,SA3BL,SAACS,GAAM,OAAKtC,EAAMuC,cAAcD,EAAOE,WAAY,SA+BxE,E,8BC5BA,GAAeC,E,QAAAA,KACb5B,EAAAA,EAAAA,KAfiB,SAACJ,GACnB,MAAO,CACNY,WAAYZ,EAAMiC,WAAWrB,WAC7BI,YAAahB,EAAMiC,WAAWjB,YAC9Be,WAAY/B,EAAMiC,WAAWF,WAE/B,IAEsB,SAACG,GACtB,MAAO,CACNJ,cAAe,SAACC,GAAU,OAAKG,GAASC,EAAAA,EAAAA,GAA2BJ,GAAY,EAEjF,IAIE5B,EAAAA,EAFF,CAGEiC,E","sources":["components/common/Common.js","webpack://my-app/./src/components/dialogs/Dialogs.module.css?04a9","components/dialogs/dialog/Dialog.jsx","components/dialogs/message/Message.jsx","components/dialogs/Dialogs.jsx","components/dialogs/DialogsContainer.jsx"],"sourcesContent":["import {Navigate, useLocation, useNavigate, useParams} from \"react-router-dom\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\n\nexport function withRouter(Component) {\n\tfunction ComponentWithRouterProp(props) {\n\t\tlet location = useLocation();\n\t\tlet navigate = useNavigate();\n\t\tlet params = useParams();\n\n\t\treturn <Component {...props} router={{location, navigate, params}}/>\n\t}\n\n\treturn ComponentWithRouterProp;\n}\n\nlet stateToPropsForRedirect = (state) => {\n\treturn {\n\t\tisAuth: state.auth.isAuth\n\t};\n}\n\nexport function withAuthRedirect(Component) {\n\tfunction ComponentWithAuthRedirect(props) {\n\t\tif (!props.isAuth) {\n\t\t\treturn <Navigate to={'/login'}/>\n\t\t}\n\n\t\treturn <Component {...props}/>\n\t}\n\n\treturn connect(stateToPropsForRedirect)(ComponentWithAuthRedirect);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__ysn4a\",\"dialog_items\":\"Dialogs_dialog_items__bNbgM\",\"active\":\"Dialogs_active__lzSY6\",\"dialog\":\"Dialogs_dialog__sn+C4\",\"messages\":\"Dialogs_messages__GVpLd\",\"message\":\"Dialogs_message__LDojH\"};","import s from './../Dialogs.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nconst Dialog = (props) => {\n\treturn (\n\t\t\t<div className={s.dialog + ' ' + s.active}>\n\t\t\t\t<NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\n\t\t\t</div>\n\t);\n}\n\nexport default Dialog;","import s from './../Dialogs.module.css'\n\nconst Message = (props) => {\n\treturn (\n\t\t\t<div className={s.message}>\n\t\t\t\t{props.message}\n\t\t\t</div>\n\t);\n}\n\nexport default Message;","import s from './Dialogs.module.css'\r\nimport Dialog from \"./dialog/Dialog\";\r\nimport Message from \"./message/Message\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormControls\";\r\nimport {lengthCreator, required} from \"../utils/Validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\tlet dialogDataElements = props.dialogData.map((data) =>\r\n\t\t\t<Dialog name={data.name} id={data.id}/>\r\n\t);\r\n\r\n\tlet messageDataElements = props.messageData.map((data) =>\r\n\t\t\t<Message message={data.message}/>\r\n\t);\r\n\r\n\tlet addNewMessage = (values) => props.addNewMessage(values.newMessage);\r\n\r\n\tlet NewMessageForm = (props) => {\r\n\t\treturn (\r\n\t\t\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Field component={Textarea}\r\n\t\t\t\t\t\t\t   name={'newMessage'}\r\n\t\t\t\t\t\t\t   placeholder='Enter new message'\r\n\t\t\t\t\t\t\t   validate={[required, lengthCreator(10)]}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<button>Send Message</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t);\r\n\t}\r\n\r\n\tlet NewMessageReduxForm = reduxForm({form: 'newMessage'})(NewMessageForm);\r\n\r\n\treturn (\r\n\t\t\t<div className={s.dialogs}>\r\n\t\t\t\t<div className={s.dialog_items}>\r\n\t\t\t\t\t{dialogDataElements}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.messages}>\r\n\t\t\t\t\t<div>{messageDataElements}</div>\r\n\t\t\t\t\t<NewMessageReduxForm onSubmit={addNewMessage}/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\nimport Dialogs from \"./Dialogs\";\nimport {addNewMessageActionCreator} from \"../../redux/reducers/dialog-reducer\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../common/Common\";\nimport {compose} from \"redux\";\n\nlet stateToProps = (state) => {\n\treturn {\n\t\tdialogData: state.dialogPage.dialogData,\n\t\tmessageData: state.dialogPage.messageData,\n\t\tnewMessage: state.dialogPage.newMessage\n\t};\n}\n\nlet dispatchToProps = (dispatch) => {\n\treturn {\n\t\taddNewMessage: (newMessage) => dispatch(addNewMessageActionCreator(newMessage))\n\t}\n}\n\nexport default compose(\n\t\tconnect(stateToProps, dispatchToProps),\n\t\twithAuthRedirect\n)(Dialogs);"],"names":["withRouter","Component","props","location","useLocation","navigate","useNavigate","params","useParams","router","stateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","connect","to","className","s","id","name","message","dialogDataElements","dialogData","map","data","messageDataElements","messageData","NewMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","lengthCreator","values","addNewMessage","newMessage","compose","dialogPage","dispatch","addNewMessageActionCreator","Dialogs"],"sourceRoot":""}